<!--pages/demo03/demo03.wxml-->

<!--
  1. text相当于web中的span标签 行内元素 不会换行
  2. view相当于web中的div标签 块级元素 会换行
  3. checkbox相当于以前的复选框标签
-->
<text>1</text>
<text>2</text>
<view>1</view>
<view>2</view>



<!--字符串-->
<view>{{msg}}</view>

<!--数字类型-->
<view>{{num}}</view>

<!--布尔类型-->
<view>是否是女生？{{isGirl}}</view>

<!--object标签-->
<view>{{person.age}}</view>
<view>{{person.height}}</view>
<view>{{person.weight}}</view>
<view>{{person.name}}</view>

<!--在标签的属性中使用-->
<view data-num = "{{num}}">
  自定义属性
</view>

<!--使用bool类型充当属性 checked
    字符串和花括号之间一定不要存在空格否则会导致识别失败
    以下写法就是错误的示范
    <checkbox checked="    {{isChecked}}"> </checkbox>
-->
<view>
  <checkbox checked = "{{isChecked}}"></checkbox>
</view>

<!--
运算=》表达式
  可以在{}中加入一些表达式
  表达式
    指一些简单的运算（数字 字符 字符串拼接 逻辑运算等等）
  语句
    比较复杂的代码段（if else swith do while for）
-->

<view>
  {{1+1}}
</view>
  
<view>
  {{'1'+'1'}}
</view>

<view>
  {{11%2===0 ? '偶数': '奇数'}}
</view>

<!--
列表循环
  1. wx:for = "{{数组或者对象}}" 
     wx:for-item = "循环项的名称"
     wx:for-index = "循环项的索引"
  2. wx:key="唯一的值"用来提高列表渲染的性能
     wx:key绑定一个普通字符串的时候，那么这个字符串肯定是循环数组中的对象的唯一属性
     wx:key = "*this"就表示该数组是一个普通的数组 *this是循环项
  3. 当出现数组的循环嵌套的时候 尤其要注意 绑定的名称不要重复
  4. 默认当前项是item，索引是index，所以只有一层循环时wx:for-item = "item" wx:for-index = "index" 可以不用写
  5. 对象循环 
      (1)wx:for = "{{对象}}" 
         wx:for-item = "对象的名称"
         wx:for-index = "对象的属性"
      (2)循环对象的时候最好把item和index都修改一下
         wx:for-item = "value"
         wx:for-index = "key"
-->

<view>
  <view wx:for = "{{list}}" wx:key="id">
    <!--
    索引: {{index}}
    --
    值：{{item.name}}
    -->
    {{index}}:{{item.name}}
  </view>
</view>


<view >对象循环</view>
<view wx:for = "{{person}}" wx:for-item = "value" wx:for-index = "key" wx:key = "age">
  属性：{{key}}
  --
  属性值：{{value}}
</view> 

<!--
block
1. 相当于占位符的标签
2. 写代码时占位符是存在的，页面渲染时小程序会把它移除
-->

<view>
  <block wx:for = "{{list}}" wx:key="id" class = "my_list">
    <!--
    索引: {{index}}
    --
    值：{{item.name}}
    -->
    {{index}}:{{item.name}}
  </block>
</view>


<!--
条件渲染
  1. wx:if="{{true/false}}"
  2. if else if else
      wx:if="{{true/false}}"
      wx:elif="{{true/false}}"
  3. hidden
    (1)hidden
    (2)hidden="{{true}}"
  4. 什么场景下用哪个
    (1)当标签不是频繁的切换显示优先使用wx:if 
        方式：直接把标签从页面移除
    (2)当标签频繁的切换显示优先使用wx:hidden 
        方式：通过添加样式的方式来切换显示
        hidden 属性不要和样式display一起使用
-->

<view>
  <view>条件渲染</view>
  <view wx:if="{{true}}">显示</view>
  <view wx:if="{{false}}">隐藏</view>

  <view wx:if="{{false}}">1</view>
  <view wx:elif="{{false}}">2</view>
  <view wx:else="{{true}}">3</view>
    
  <view>--------------</view>
  <view hidden>hidden1</view>
  <view hidden="{{false}}">hidden2</view>

  <view>------000--------</view>
  <view wx:if = "{{false}}">wx:if</view>
  <view hidden>hidden</view> 
</view>
  
